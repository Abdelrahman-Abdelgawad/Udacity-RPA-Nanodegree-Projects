<Activity mc:Ignorable="sap sap2010" x:Class="Invoice_Scraping" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:si="clr-namespace:System.IO;assembly=mscorlib" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property sap2010:Annotation.AnnotationText="A variable that carries all the information about the Invoices folder." Name="in_InvoicesFolder" Type="InArgument(si:DirectoryInfo)" />
    <x:Property sap2010:Annotation.AnnotationText="A list to carry all the scrapped invoices numbers." Name="out_InvoicesNumbers" Type="OutArgument(scg:List(x:String))" />
    <x:Property sap2010:Annotation.AnnotationText="A list to carry all the scrapped invoices dates." Name="out_InvoicesDates" Type="OutArgument(scg:List(x:String))" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1240,2695</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>Invoice_Scraping_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="58">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>UiPath.DataTableUtilities</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="27">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="Deacription: &#xA;A flow that opens all the downloaded invoices, scrapes all the required data from them and performs all the other necessary processes on the collected data.&#xA;&#xA;Pre-Condition: &#xA;    1 - Invoices folder exists and contains the Invoices as PDF.&#xD;&#xA;    2 - Adobe acrobat reader is closed at beginning of the workflow.&#xA;&#xA;Post-Condtion:&#xA;    Invoices numbers and dates lists are not empty." DisplayName="Invoice_Scraping" sap:VirtualizedContainerService.HintSize="827,2630" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:LogMessage DisplayName="Log Message - Start" sap:VirtualizedContainerService.HintSize="785,51" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[&quot;AdobeAcrobat_InvoiceScraping: Excecution Started.&quot;]">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:LogMessage>
    <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="785,2194" sap2010:WorkflowViewState.IdRef="TryCatch_1">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <TryCatch.Try>
        <ui:RetryScope DisplayName="Retry Scope" sap:VirtualizedContainerService.HintSize="747,1945" sap2010:WorkflowViewState.IdRef="RetryScope_1" NumberOfRetries="3" RetryInterval="00:00:03">
          <ui:RetryScope.ActivityBody>
            <ActivityAction>
              <Sequence DisplayName="Action" sap:VirtualizedContainerService.HintSize="705,1771" sap2010:WorkflowViewState.IdRef="Sequence_3">
                <Sequence.Variables>
                  <Variable x:TypeArguments="x:Int32" Name="CurrentInvoice" />
                </Sequence.Variables>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Sequence sap2010:Annotation.AnnotationText="A sequence to check the pre-condition of the flow." DisplayName="Sequence - Pre Condition" sap:VirtualizedContainerService.HintSize="663,761" sap2010:WorkflowViewState.IdRef="Sequence_2">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <If sap2010:Annotation.AnnotationText="Checks if the input argument (Invoices Folder) Exists.&#xA;If so, Start processing.&#xA;Else, Throw a system exception." Condition="[Directory.Exists(in_InvoicesFolder.FullName)]" DisplayName="If - Invoices Folder Exists" sap:VirtualizedContainerService.HintSize="621,490" sap2010:WorkflowViewState.IdRef="If_1">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <If.Then>
                      <ui:LogMessage DisplayName="Log Message - Invoices Folder Exists" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="LogMessage_6" Level="Info" Message="[&quot;AdobeAcrobat_InvoiceScraping: Invoices Folder Exists, Processing Started.&quot;]">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:LogMessage>
                    </If.Then>
                    <If.Else>
                      <Sequence sap2010:Annotation.AnnotationText="Throw a system exception." DisplayName="Sequence - Invoices Folder Doesn't Exist" sap:VirtualizedContainerService.HintSize="376,276" sap2010:WorkflowViewState.IdRef="Sequence_7">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:LogMessage DisplayName="Log Message - Folder Doesn't Exists" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_7" Level="Info" Message="[&quot;AdobeAcrobat_InvoiceScraping: Invoices Folder Doesn't Exist!!&quot;]" />
                        <Throw DisplayName="Throw - SE" Exception="[new System.SystemException(&quot;AdobeAcrobat_InvoiceScraping: Invoices Folder Doesn't Exist.&quot;)]" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="Throw_1" />
                      </Sequence>
                    </If.Else>
                  </If>
                  <ui:KillProcess AppliesTo="{x:Null}" ContinueOnError="{x:Null}" Process="{x:Null}" sap2010:Annotation.AnnotationText="Closes all the processes of adobe acrobat reader before moving forward." DisplayName="Kill Process - Close Invoice" sap:VirtualizedContainerService.HintSize="621,108" sap2010:WorkflowViewState.IdRef="KillProcess_2" ProcessName="AcroRd32">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:KillProcess>
                </Sequence>
                <ui:MultipleAssign sap2010:Annotation.AnnotationText="Initializes both of the output arguments, InvoicesNumbers &amp; InvoicesDates." DisplayName="Multiple Assign - Output Lists Initialization" sap:VirtualizedContainerService.HintSize="663,108" sap2010:WorkflowViewState.IdRef="MultipleAssign_2">
                  <ui:MultipleAssign.AssignOperations>
                    <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                      <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_5">
                        <ui:AssignOperation.To>
                          <OutArgument x:TypeArguments="scg:List(x:String)">[out_InvoicesNumbers]</OutArgument>
                        </ui:AssignOperation.To>
                        <ui:AssignOperation.Value>
                          <InArgument x:TypeArguments="scg:List(x:String)">[new List(of System.String)()]</InArgument>
                        </ui:AssignOperation.Value>
                      </ui:AssignOperation>
                      <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_6">
                        <ui:AssignOperation.To>
                          <OutArgument x:TypeArguments="scg:List(x:String)">[out_InvoicesDates]</OutArgument>
                        </ui:AssignOperation.To>
                        <ui:AssignOperation.Value>
                          <InArgument x:TypeArguments="scg:List(x:String)">[new List(of System.String)()]</InArgument>
                        </ui:AssignOperation.Value>
                      </ui:AssignOperation>
                    </scg:List>
                  </ui:MultipleAssign.AssignOperations>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:MultipleAssign>
                <ui:ForEach x:TypeArguments="si:FileInfo" sap2010:Annotation.AnnotationText="Loops through each PDF file in the invoices folder and process this file." CurrentIndex="[CurrentInvoice]" DisplayName="For Each - File in Invoices Folder" sap:VirtualizedContainerService.HintSize="663,108" sap2010:WorkflowViewState.IdRef="ForEach`1_2" Values="[in_InvoicesFolder.GetFiles]">
                  <ui:ForEach.Body>
                    <ActivityAction x:TypeArguments="si:FileInfo">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="si:FileInfo" Name="File" />
                      </ActivityAction.Argument>
                      <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="502,2848" sap2010:WorkflowViewState.IdRef="Sequence_9">
                        <Sequence.Variables>
                          <Variable x:TypeArguments="sd:DataTable" sap2010:Annotation.AnnotationText="A variable to carry all the scraped order information." Default="[New System.Data.DataTable]" Name="OrderInfo1" />
                          <Variable x:TypeArguments="x:String" sap2010:Annotation.AnnotationText="A variable to carry the scrapped number of pages of the current invoice." Name="NumOfPages" />
                          <Variable x:TypeArguments="x:String" sap2010:Annotation.AnnotationText="A variable to carry the scrapped invoice number." Name="InvoiceNum" />
                          <Variable x:TypeArguments="x:String" sap2010:Annotation.AnnotationText="A variable to carry the scrapped invoice date." Name="InvoiceDate" />
                          <Variable x:TypeArguments="x:String" sap2010:Annotation.AnnotationText="A variable to carry the path of the excel file that holds the order information to be sent to my email." Name="ExcelFilePath" />
                          <Variable x:TypeArguments="x:Int32" sap2010:Annotation.AnnotationText="A convertred variable from the string number of pages to an integer to use it in a loop condition." Name="IntNumOfPages" />
                          <Variable x:TypeArguments="sd:DataTable" Name="OrderInfo2" />
                          <Variable x:TypeArguments="x:Int32" Name="ColumnNum" />
                        </Sequence.Variables>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:StartProcess Arguments="{x:Null}" WorkingDirectory="{x:Null}" sap2010:Annotation.AnnotationText="Opens the current PDF file using Adobe Acrobat Reader program." DisplayName="Start Process - Open Invoice" FileName="[file.FullName]" sap:VirtualizedContainerService.HintSize="460,108" sap2010:WorkflowViewState.IdRef="StartProcess_1">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:StartProcess>
                        <Sequence sap2010:Annotation.AnnotationText="A Sequence that contains all scraping activities that scrape the required data from the PDF file." DisplayName="Sequence - Scraping Required Data" sap:VirtualizedContainerService.HintSize="460,1774" sap2010:WorkflowViewState.IdRef="Sequence_17">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:GetValue ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Reads the number of pages of the PDF file to know if the data was divided into more than one page or not." DisplayName="Get Text - # of Pages" sap:VirtualizedContainerService.HintSize="418,148" sap2010:WorkflowViewState.IdRef="GetValue_2">
                            <ui:GetValue.Target>
                              <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="d4d54aaf-385d-4f84-8e2f-1b00fabde4c8" InformativeScreenshot="6e7f3122aac2a6356ff6ee837854d62a" Selector="&lt;wnd app='acrord32.exe' title='*Adobe Acrobat Reader DC*' /&gt;&#xA;&lt;ctrl role='text' idx='1' /&gt;&#xA;">
                                <ui:Target.TimeoutMS>
                                  <InArgument x:TypeArguments="x:Int32" />
                                </ui:Target.TimeoutMS>
                                <ui:Target.WaitForReady>
                                  <InArgument x:TypeArguments="ui:WaitForReady" />
                                </ui:Target.WaitForReady>
                              </ui:Target>
                            </ui:GetValue.Target>
                            <ui:GetValue.Value>
                              <OutArgument x:TypeArguments="x:String">[NumOfPages]</OutArgument>
                            </ui:GetValue.Value>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ui:GetValue>
                          <Assign sap2010:Annotation.AnnotationText="Converts the scraped number of pages to integer to process these pages later." DisplayName="Assign" sap:VirtualizedContainerService.HintSize="418,102" sap2010:WorkflowViewState.IdRef="Assign_2">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Int32">[IntNumOfPages]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:Int32">[Int32.Parse(Split(NumOfPages,"/")(1).Trim)]</InArgument>
                            </Assign.Value>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </Assign>
                          <Parallel sap2010:Annotation.AnnotationText="A parallel activity to read the required data in less time." DisplayName="Parallel - Read Invoice Data" sap:VirtualizedContainerService.HintSize="418,93" sap2010:WorkflowViewState.IdRef="Parallel_1">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:GetVisibleText FormattedText="{x:Null}" WordsInfo="{x:Null}" sap2010:Annotation.AnnotationText="Reads the current invoice date." DisplayName="Get Visible Text - Invoice Date" sap:VirtualizedContainerService.HintSize="334,137" sap2010:WorkflowViewState.IdRef="GetVisibleText_4">
                              <ui:GetVisibleText.Target>
                                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="921c2c9f-caeb-46a1-b7f9-8c11d22bf8ad" InformativeScreenshot="6b93bec289643ceac7c6188d0972283f" Selector="&lt;wnd app='acrord32.exe' title='*Adobe Acrobat Reader DC*' /&gt;&lt;ctrl role='graphic' idx='8' /&gt;">
                                  <ui:Target.TimeoutMS>
                                    <InArgument x:TypeArguments="x:Int32" />
                                  </ui:Target.TimeoutMS>
                                  <ui:Target.WaitForReady>
                                    <InArgument x:TypeArguments="ui:WaitForReady" />
                                  </ui:Target.WaitForReady>
                                </ui:Target>
                              </ui:GetVisibleText.Target>
                              <ui:GetVisibleText.Text>
                                <OutArgument x:TypeArguments="x:String">[InvoiceDate]</OutArgument>
                              </ui:GetVisibleText.Text>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:GetVisibleText>
                            <ui:ExtractData DelayBetweenPagesMS="{x:Null}" NextLinkSelector="{x:Null}" sap2010:Annotation.AnnotationText="Scrape all the order informtions in a data table form." ContinueOnError="True" DataTable="[OrderInfo1]" DisplayName="Extract Structured Data - Order Info_First Table" ExtractMetadata="&lt;extract-table get_columns_name='1' get_empty_columns='1' columns_name_source='Longest' /&gt;" sap:VirtualizedContainerService.HintSize="200,137" sap2010:WorkflowViewState.IdRef="ExtractData_2" MaxNumberOfResults="30" SimulateClick="True">
                              <ui:ExtractData.Target>
                                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="80c33f88-eb9f-42d4-a514-3d76bc1dbdf6" InformativeScreenshot="ba2a87566113a55a06516cf9d24fd849" Selector="&lt;wnd app='acrord32.exe' title='*Adobe Acrobat Reader DC*' /&gt;&#xA;&lt;ctrl role='table' idx='2' /&gt;&#xA;">
                                  <ui:Target.TimeoutMS>
                                    <InArgument x:TypeArguments="x:Int32" />
                                  </ui:Target.TimeoutMS>
                                  <ui:Target.WaitForReady>
                                    <InArgument x:TypeArguments="ui:WaitForReady" />
                                  </ui:Target.WaitForReady>
                                </ui:Target>
                              </ui:ExtractData.Target>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:ExtractData>
                            <ui:GetVisibleText FormattedText="{x:Null}" WordsInfo="{x:Null}" sap2010:Annotation.AnnotationText="Reads the current invoice number." DisplayName="Get Visible Text - Invoice Number" sap:VirtualizedContainerService.HintSize="334,137" sap2010:WorkflowViewState.IdRef="GetVisibleText_3">
                              <ui:GetVisibleText.Target>
                                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="c8561a63-7909-4fd8-8ea9-04015e0b8ae1" InformativeScreenshot="a06b993f1d3197808fc8209d5c53fd6a" Selector="&lt;wnd app='acrord32.exe' title='*Adobe Acrobat Reader DC*' /&gt;&lt;ctrl role='graphic' idx='7' /&gt;">
                                  <ui:Target.TimeoutMS>
                                    <InArgument x:TypeArguments="x:Int32" />
                                  </ui:Target.TimeoutMS>
                                  <ui:Target.WaitForReady>
                                    <InArgument x:TypeArguments="ui:WaitForReady" />
                                  </ui:Target.WaitForReady>
                                </ui:Target>
                              </ui:GetVisibleText.Target>
                              <ui:GetVisibleText.Text>
                                <OutArgument x:TypeArguments="x:String">[InvoiceNum]</OutArgument>
                              </ui:GetVisibleText.Text>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:GetVisibleText>
                          </Parallel>
                          <ui:InterruptibleWhile sap2010:Annotation.AnnotationText="Loops untill the number of pages reaches zero to extract data from other pages." DisplayName="While - Number of Pages &gt; 0" sap:VirtualizedContainerService.HintSize="418,1177" sap2010:WorkflowViewState.IdRef="InterruptibleWhile_1">
                            <ui:InterruptibleWhile.Body>
                              <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="382,970" sap2010:WorkflowViewState.IdRef="Sequence_19">
                                <Sequence.Variables>
                                  <Variable x:TypeArguments="x:String" Name="TableNum" />
                                </Sequence.Variables>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <Assign sap2010:Annotation.AnnotationText="Assignsthe value of the table number for the dynamic selector." sap:VirtualizedContainerService.HintSize="340,102" sap2010:WorkflowViewState.IdRef="Assign_3">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:String">[TableNum]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:String">[(IntNumOfPages+1).ToString]</InArgument>
                                  </Assign.Value>
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                </Assign>
                                <ui:ExtractData DelayBetweenPagesMS="{x:Null}" NextLinkSelector="{x:Null}" sap2010:Annotation.AnnotationText="Scrape all the order informtions of th other pages in a data table form." ContinueOnError="True" DataTable="[OrderInfo2]" DisplayName="Extract Structured Data - OrderInfo_OtherTables" ExtractMetadata="&lt;extract-table get_columns_name='1' get_empty_columns='1' columns_name_source='Longest' /&gt;" sap:VirtualizedContainerService.HintSize="340,108" sap2010:WorkflowViewState.IdRef="ExtractData_3" MaxNumberOfResults="30" SimulateClick="True">
                                  <ui:ExtractData.Target>
                                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="80c33f88-eb9f-42d4-a514-3d76bc1dbdf6" InformativeScreenshot="b69005e11aa9ebd6621981253b79d792" Selector="[String.Format(&quot;&lt;wnd app='acrord32.exe' title='*Adobe Acrobat Reader DC*' /&gt;&lt;ctrl role='table' idx='{0}' /&gt;&quot;, TableNum)]">
                                      <ui:Target.TimeoutMS>
                                        <InArgument x:TypeArguments="x:Int32" />
                                      </ui:Target.TimeoutMS>
                                      <ui:Target.WaitForReady>
                                        <InArgument x:TypeArguments="ui:WaitForReady" />
                                      </ui:Target.WaitForReady>
                                    </ui:Target>
                                  </ui:ExtractData.Target>
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                </ui:ExtractData>
                                <ui:ForEach x:TypeArguments="sd:DataColumn" sap2010:Annotation.AnnotationText="Change all column names in the other data table to match the names of the first data table." CurrentIndex="[ColumnNum]" DisplayName="For Each - Column in OrderInfo_ OtherTable " sap:VirtualizedContainerService.HintSize="340,327" sap2010:WorkflowViewState.IdRef="ForEach`1_3" Values="[OrderInfo2.Columns]">
                                  <ui:ForEach.Body>
                                    <ActivityAction x:TypeArguments="sd:DataColumn">
                                      <ActivityAction.Argument>
                                        <DelegateInArgument x:TypeArguments="sd:DataColumn" Name="column" />
                                      </ActivityAction.Argument>
                                      <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_14">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <Assign DisplayName="Assign - Rename The Column" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_1">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:String">[column.ColumnName]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:String">[OrderInfo1.Columns(ColumnNum).ToString]</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                      </Sequence>
                                    </ActivityAction>
                                  </ui:ForEach.Body>
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                </ui:ForEach>
                                <ui:MergeDataTable sap2010:Annotation.AnnotationText="Merges the new scraped order info table with the old one." Destination="[OrderInfo1]" DisplayName="Merge Data Table - Both Order Info" sap:VirtualizedContainerService.HintSize="340,79" sap2010:WorkflowViewState.IdRef="MergeDataTable_1" MissingSchemaAction="Ignore" Source="[OrderInfo2]">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                </ui:MergeDataTable>
                                <Assign sap2010:Annotation.AnnotationText="Decrement the number of pages (loop counter)." sap:VirtualizedContainerService.HintSize="340,102" sap2010:WorkflowViewState.IdRef="Assign_4">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:Int32">[IntNumOfPages]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:Int32">[IntNumOfPages - 1]</InArgument>
                                  </Assign.Value>
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                </Assign>
                              </Sequence>
                            </ui:InterruptibleWhile.Body>
                            <ui:InterruptibleWhile.Condition>
                              <mva:VisualBasicValue x:TypeArguments="x:Boolean" ExpressionText="IntNumOfPages-1 &gt; 0" sap2010:WorkflowViewState.IdRef="VisualBasicValue`1_1" />
                            </ui:InterruptibleWhile.Condition>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ui:InterruptibleWhile>
                        </Sequence>
                        <ui:KillProcess AppliesTo="{x:Null}" ContinueOnError="{x:Null}" Process="{x:Null}" sap2010:Annotation.AnnotationText="Closes the current invoice." DisplayName="Kill Process - Close Invoice" sap:VirtualizedContainerService.HintSize="460,82" sap2010:WorkflowViewState.IdRef="KillProcess_1" ProcessName="AcroRd32">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:KillProcess>
                        <Sequence sap2010:Annotation.AnnotationText="A sequence that adds a new transaction to the &quot;InvoicesDetails&quot; queue on the orchestrator." DisplayName="Sequence - Add Queue Items" sap:VirtualizedContainerService.HintSize="460,138" sap2010:WorkflowViewState.IdRef="Sequence_18">
                          <Sequence.Variables>
                            <Variable x:TypeArguments="x:String" Name="Total" />
                            <Variable x:TypeArguments="x:String" Name="SubTotal" />
                            <Variable x:TypeArguments="x:String" Name="GST" />
                          </Sequence.Variables>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:MultipleAssign sap2010:Annotation.AnnotationText="Give values to the variables to be added to the queue." DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="200,93" sap2010:WorkflowViewState.IdRef="MultipleAssign_3">
                            <ui:MultipleAssign.AssignOperations>
                              <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_7">
                                  <ui:AssignOperation.To>
                                    <OutArgument x:TypeArguments="x:String">[Total]</OutArgument>
                                  </ui:AssignOperation.To>
                                  <ui:AssignOperation.Value>
                                    <InArgument x:TypeArguments="x:String">[OrderInfo1(OrderInfo1.Rows.Count - 1)(OrderInfo1.Columns.Count - 1).ToString]</InArgument>
                                  </ui:AssignOperation.Value>
                                </ui:AssignOperation>
                                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_8">
                                  <ui:AssignOperation.To>
                                    <OutArgument x:TypeArguments="x:String">[GST]</OutArgument>
                                  </ui:AssignOperation.To>
                                  <ui:AssignOperation.Value>
                                    <InArgument x:TypeArguments="x:String">[OrderInfo1(OrderInfo1.Rows.Count - 2)(OrderInfo1.Columns.Count - 1).ToString]</InArgument>
                                  </ui:AssignOperation.Value>
                                </ui:AssignOperation>
                                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_9">
                                  <ui:AssignOperation.To>
                                    <OutArgument x:TypeArguments="x:String">[SubTotal]</OutArgument>
                                  </ui:AssignOperation.To>
                                  <ui:AssignOperation.Value>
                                    <InArgument x:TypeArguments="x:String">[OrderInfo1(OrderInfo1.Rows.Count - 3)(OrderInfo1.Columns.Count - 1).ToString]</InArgument>
                                  </ui:AssignOperation.Value>
                                </ui:AssignOperation>
                              </scg:List>
                            </ui:MultipleAssign.AssignOperations>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ui:MultipleAssign>
                          <ui:AddQueueItem ServiceBaseAddress="{x:Null}" TimeoutMS="{x:Null}" sap2010:Annotation.AnnotationText="Adds a new queue item with the previous variables." DisplayName="Add Queue Item" sap:VirtualizedContainerService.HintSize="200,64" sap2010:WorkflowViewState.IdRef="AddQueueItem_1" Priority="Normal" QueueType="Invoices Details">
                            <ui:AddQueueItem.ItemInformation>
                              <InArgument x:TypeArguments="x:String" x:Key="Customer Name">[Split(File.Name,"_")(0)]</InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="Sub Total">[SubTotal]</InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="GST">[GST]</InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="Total">[Total]</InArgument>
                            </ui:AddQueueItem.ItemInformation>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ui:AddQueueItem>
                        </Sequence>
                        <AddToCollection x:TypeArguments="x:String" sap2010:Annotation.AnnotationText="Adds the current invoice num to the InvoicesNumbers list." Collection="[out_InvoicesNumbers]" DisplayName="Add To Collection - Invoice Num" sap:VirtualizedContainerService.HintSize="460,64" sap2010:WorkflowViewState.IdRef="AddToCollection`1_2" Item="[Split(InvoiceNum,&quot;#&quot;)(1).Trim]">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </AddToCollection>
                        <AddToCollection x:TypeArguments="x:String" sap2010:Annotation.AnnotationText="Adds the current invoice date to the InvoicesDates list." Collection="[out_InvoicesDates]" DisplayName="Add To Collection - Invoice Date" sap:VirtualizedContainerService.HintSize="460,64" sap2010:WorkflowViewState.IdRef="AddToCollection`1_3" Item="[Split(InvoiceDate,&quot;:&quot;)(1).Trim]">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </AddToCollection>
                        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Invoke the workflow that saves all the order information for the current invoice in a new excel file." DisplayName="Invoke Save Invoice Order Info workflow" sap:VirtualizedContainerService.HintSize="460,123" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Excel\SaveInvoiceOrderInfo.xaml">
                          <ui:InvokeWorkflowFile.Arguments>
                            <InArgument x:TypeArguments="sd:DataTable" x:Key="in_OrdeInfos">[OrderInfo1]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_InvoicesFolderPath">[in_InvoicesFolder.FullName]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_InvoiceName">[Split(File.Name,".")(0)]</InArgument>
                            <OutArgument x:TypeArguments="x:String" x:Key="out_ExcelFilePath">[ExcelFilePath]</OutArgument>
                          </ui:InvokeWorkflowFile.Arguments>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:InvokeWorkflowFile>
                        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Invoke the workflow tat sends the saved excel file of the order information to my email." DisplayName="Invoke Send Mails workflow" sap:VirtualizedContainerService.HintSize="460,123" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Outlook\SendMails.xaml">
                          <ui:InvokeWorkflowFile.Arguments>
                            <InArgument x:TypeArguments="x:String" x:Key="in_FilePath">[ExcelFilePath]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_InvoiceName">[Split(File.Name,".")(0)]</InArgument>
                          </ui:InvokeWorkflowFile.Arguments>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:InvokeWorkflowFile>
                      </Sequence>
                    </ActivityAction>
                  </ui:ForEach.Body>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:ForEach>
                <Sequence sap2010:Annotation.AnnotationText="A sequence to check on the post condition of the flow." DisplayName="Post-Condition Sequence" sap:VirtualizedContainerService.HintSize="663,582" sap2010:WorkflowViewState.IdRef="Sequence_22">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <If sap2010:Annotation.AnnotationText="Checks if the InvoicesNumbers and the InvoicesDates lists are both not empty.&#xA;If so, End the flow.&#xA;Else, Throw a system exception." Condition="[out_InvoicesDates.Count &gt; 0  or out_InvoicesNumbers.Count &gt; 0]" DisplayName="If - Non Empty Lists" sap:VirtualizedContainerService.HintSize="621,459" sap2010:WorkflowViewState.IdRef="If_3">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <If.Then>
                      <ui:LogMessage DisplayName="Log Message - Non Empty Lists" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="LogMessage_10" Level="Info" Message="[&quot;AdobeAcrobat_InvoiceScraping: Invoices Numbers and Dates Scraped Successfully.&quot;]">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:LogMessage>
                    </If.Then>
                    <If.Else>
                      <Sequence DisplayName="Sequence - Empty Lists" sap:VirtualizedContainerService.HintSize="376,245" sap2010:WorkflowViewState.IdRef="Sequence_23">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:LogMessage DisplayName="Log Message - Empt Lists" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_11" Level="Info" Message="[&quot;AdobeAcrobat_InvoiceScraping: Invoices Numbers and Dates couldn't be scraped.&quot;]" />
                        <Throw DisplayName="Throw -SE" Exception="[New System.SystemException(&quot;AdobeAcrobat_InvoiceScraping: Invoices Numbers and Dates Couldn't be Scrapped.&quot;)]" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="Throw_2" />
                      </Sequence>
                    </If.Else>
                  </If>
                </Sequence>
              </Sequence>
            </ActivityAction>
          </ui:RetryScope.ActivityBody>
          <ui:RetryScope.Condition>
            <ActivityFunc x:TypeArguments="x:Boolean" />
          </ui:RetryScope.Condition>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </ui:RetryScope>
      </TryCatch.Try>
      <TryCatch.Catches>
        <Catch x:TypeArguments="s:SystemException" sap:VirtualizedContainerService.HintSize="751,21" sap2010:WorkflowViewState.IdRef="Catch`1_1">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ActivityAction x:TypeArguments="s:SystemException">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="s:SystemException" Name="exception" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Sequence - SE" sap:VirtualizedContainerService.HintSize="242,205" sap2010:WorkflowViewState.IdRef="Sequence_4">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:LogMessage DisplayName="Log Message - SE" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Error" Message="[&quot;AdobeAcrobat_InvoiceScraping: An Error Occured Due To, &quot; + exception.Source +&#xA;Environment.NewLine + exception.Message]">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:LogMessage>
              <Rethrow sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Rethrow_1" />
            </Sequence>
          </ActivityAction>
        </Catch>
        <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="751,21" sap2010:WorkflowViewState.IdRef="Catch`1_3">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ActivityAction x:TypeArguments="s:Exception">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Sequence - E" sap:VirtualizedContainerService.HintSize="376,66" sap2010:WorkflowViewState.IdRef="Sequence_6">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:LogMessage DisplayName="Log Message - E" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_4" Level="Error" Message="[&quot;AdobeAcrobat_InvoiceScraping: An Error Occured Due To, &quot; + exception.Source +&#xA;Environment.NewLine + exception.Message]" />
              <Rethrow sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="Rethrow_3" />
            </Sequence>
          </ActivityAction>
        </Catch>
      </TryCatch.Catches>
    </TryCatch>
    <ui:LogMessage DisplayName="Log Message - End" sap:VirtualizedContainerService.HintSize="785,51" sap2010:WorkflowViewState.IdRef="LogMessage_5" Level="Info" Message="[&quot;AdobeAcrobat_InvoiceScraping: Excecution Ended.&quot;]">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:LogMessage>
  </Sequence>
</Activity>